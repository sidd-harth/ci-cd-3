pipeline {
    agent any

    tools {
        maven 'M386'
    }

    environment {
        POM_VERSION         = sh(script: "mvn help:evaluate -Dexpression='project.version' -q -DforceStdout", returnStdout: true).trim()
        POM_MAJOR_VERSION   = sh(script: "mvn help:evaluate -Dexpression='project.version' -q -DforceStdout |  cut -d. -f1", returnStdout: true).trim()
        POM_MINOR_VERSION   = sh(script: "mvn help:evaluate -Dexpression='project.version' -q -DforceStdout |  cut -d. -f2", returnStdout: true).trim()
        POM_PATCH_VERSION   = sh(script: "mvn help:evaluate -Dexpression='project.version' -q -DforceStdout |  cut -d. -f3 | cut -d- -f1", returnStdout: true).trim()
        POM_MAVEN_QUALIFIER = sh(script: "mvn help:evaluate -Dexpression='project.version' -q -DforceStdout | cut -d- -f2", returnStdout: true).trim()
        POM_SCM_URL         = sh(script: "mvn help:evaluate -Dexpression='project.scm.url' -q -DforceStdout", returnStdout: true).trim()
    }

       
    stages {

        stage('Echo Version') {
            steps {
                echo "POM_MAJOR_VERSION: ${env.POM_MAJOR_VERSION}"
                echo "POM_MINOR_VERSION: ${env.POM_MINOR_VERSION}"
                echo "POM_PATCH_VERSION: ${env.POM_PATCH_VERSION}"
                echo "POM_MAVEN_QUALIFIER: ${env.POM_MAVEN_QUALIFIER}"
            }
        }

        stage('Download from Artifactory') {
            steps {
                sh 'echo Download from Artifactory Success'
            }
        }

        stage('Promote API - PROD') {
            steps {
                sh 'echo Promote API - UAT Success'
            }
        }

        stage('Deploy to CH2 - PROD') {
            steps {
                sh 'echo Deploy to CH2 UAT Success'
            }
        }

        stage('Performance Testing') {
            steps {
                sh 'echo Integration Testing Success'
            }
        }

        stage('End-End Testing') {
            steps {
                sh 'echo Regression Testing Success'
            }
        }
       

        stage('Smoke Testing') {
            steps {
                sh 'echo Smoke Testing Success'
            }
        } 


        stage('Create Git Tag') {
            steps {
                sh "git checkout main"
                sh "git tag ${env.POM_MAJOR_VERSION}.${env.POM_MINOR_VERSION}.${env.POM_PATCH_VERSION}"
                sh "git push origin --tags"
            }
        } 

    }

}
